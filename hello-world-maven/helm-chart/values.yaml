# Default values for hello-world-maven.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: your-acr-name.azurecr.io/hello-world-maven
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# For ACR authentication, specify the image pull secret
imagePullSecrets:
  - name: acr-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 4567

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hello-world-maven.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: hello-world-maven-tls
  #    hosts:
  #      - hello-world-maven.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Prometheus monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    labels: {}
    annotations: {}

# Environment variables
env: []
  # - name: ENV_VAR_NAME
  #   value: "env_var_value"

# ConfigMap and Secret mounts
configMaps: []
secrets: []

# Additional volumes
volumes: []

# Additional volume mounts
volumeMounts: []

# Security configurations
networkPolicy:
  enabled: true
  
podSecurityPolicy:
  enabled: false  # Enable if your cluster supports PSP

podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Security scanning and compliance
security:
  # Container image scanning results
  imageScanResults:
    # This can be populated by CI/CD pipeline
    criticalVulnerabilities: 0
    highVulnerabilities: 0
    lastScanned: ""
  
  # Compliance labels
  compliance:
    framework: "NIST"
    controls: ["AC-1", "AC-2", "SC-1", "SC-7"]
    
# Runtime security monitoring  
runtimeSecurity:
  # Enable falco for runtime threat detection (requires Falco installed)
  falco:
    enabled: false
    
  # Enable admission controller webhook
  admissionController:
    enabled: false